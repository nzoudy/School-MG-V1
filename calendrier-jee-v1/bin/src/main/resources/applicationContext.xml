<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security 
						http://www.springframework.org/schema/security/spring-security-3.2.xsd
						http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/context 
						http://www.springframework.org/schema/context/spring-context-3.2.xsd
						http://www.springframework.org/schema/tx 
						http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">

	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
		<property name="url" value="jdbc:mysql://localhost:3306/calendrier_DB"></property>
		<property name="username" value="root"></property>
		<property name="password" value=""></property>
	</bean>

	<bean id="persistenceUnitManager"
		class="org.springframework.orm.jpa.persistenceunit.DefaultPersistenceUnitManager">
		<property name="defaultDataSource" ref="dataSource"></property>
		<property name="persistenceXmlLocations">
			<list>
				<value>classpath*:META-INF/persistence.xml</value>
			</list>
		</property>
	</bean>

	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="persistenceUnitManager" ref="persistenceUnitManager"></property>
		<property name="persistenceUnitName" value="UP_CALENDRIER"></property>
	</bean>

	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory"></property>
	</bean>
	<tx:annotation-driven transaction-manager="transactionManager" />
	<context:annotation-config></context:annotation-config>

	<bean id="dao" class="com.ingesup.expcal.dao.CalendrierPlanningDAOImpl"></bean>

	<bean id="metier" class="com.ingesup.expcal.metier.CalendrierPlanningMetierImpl">
		<property name="dao" ref="dao"></property>
	</bean>


	<!-- If request parameter "targetUrl" is existed, then forward to this url -->
	<!-- For update login form -->
	<bean id="savedRequestAwareAuthenticationSuccessHandler"
		class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler">
		<property name="targetUrlParameter" value="targetUrl" />
	</bean>

	<!-- enable use-expressions -->
	<security:http auto-config="true" use-expressions="true">
		<security:intercept-url pattern="/admin**" access="hasRole('ROLE_ADMIN')" />

		<security:form-login login-page="/login" default-target-url="/welcome"
			authentication-failure-url="/login?error" username-parameter="username"
			password-parameter="password" login-processing-url="/auth/login_check"
			authentication-success-handler-ref="savedRequestAwareAuthenticationSuccessHandler" />

		<security:logout logout-success-url="/login?logout" delete-cookies="JSESSIONID" />
		<security:csrf />

		<!-- enable remember me :: 1209600 = 2 weeks (14 days), 86400 = 1 day, 18000 = 5 hours.-->
		<security:remember-me token-validity-seconds="1209600"
			remember-me-parameter="remember-me" data-source-ref="dataSource" />
			
	</security:http>

	<!-- Spring security, namespace security = s on the top declaration -->
	<!-- xmlns:s="http://www.springframework.org/schema/security" pensez Ã  ajouter 
		le namespace -->

	<!-- <bean id="filterChainProxy" class="org.springframework.security.web.FilterChainProxy" 
		/> <security:http> <security:intercept-url pattern="/planningProfesseur/**" 
		access="ROLE_ADMIN_PROFESSEUR"/> <security:intercept-url pattern="/planningEtudiant/**" 
		access="ROLE_ADMIN_ETUDIANT"/> <security:form-login login-page="/login" default-target-url="/planningEtudiant/displayEtudiant" 
		authentication-failure-url="/login" /> <security:logout logout-success-url="/logout" 
		/> </security:http> <security:authentication-manager> <security:authentication-provider> 
		<security:password-encoder hash="md5"></security:password-encoder> <security:jdbc-user-service 
		data-source-ref="dataSource" users-by-username-query="select u.userName, 
		password, actived, from users where userName=?" authorities-by-username-query="select 
		u.userName, r.roleName from users u, role r where u.user_id = r.user_id and 
		u.userName=? " /> </security:authentication-provider> </security:authentication-manager> -->


</beans>





<!-- <s:user-service> <s:user name="admin1" password="admin1" authorities="ROLE_ADMIN_CAT,ROLE_ADMIN_PROD"/> 
	<s:user name="admin2" password="admin2" authorities="ROLE_ADMIN_PROD"/> </s:user-service> -->



















